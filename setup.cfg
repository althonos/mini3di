# https://gist.github.com/althonos/6914b896789d3f2078d1e6237642c35c

# --- Setuptools metadata ----------------------------------------------------

[metadata]
name = mini3di
version = attr: mini3di.__version__
author = Martin Larralde
author_email = martin.larralde@embl.de
url = https://github.com/althonos/mini3di
description = A NumPy port of the foldseek code for encoding structures to 3di.
long_description = file: README.md
long_description_content_type = text/markdown
license = GPL-3.0-only
platform = posix
keywords = bioinformatics, protein, structure, foldseek, 3di
classifier =
    Development Status :: 4 - Beta
    Intended Audience :: Developers
    Intended Audience :: Science/Research
    License :: OSI Approved :: GNU General Public License v3 (GPLv3)
    Operating System :: OS Independent
    Programming Language :: Python :: 3.7
    Programming Language :: Python :: 3.8
    Programming Language :: Python :: 3.9
    Programming Language :: Python :: 3.10
    Programming Language :: Python :: 3.11
    Programming Language :: Python :: 3.12
    Topic :: Scientific/Engineering :: Bio-Informatics
    Topic :: Scientific/Engineering :: Medical Science Apps.
    Typing :: Typed
project_urls =
    Bug Tracker = https://github.com/althonos/mini3di/issues
    Changelog = https://github.com/althonos/mini3di/blob/master/CHANGELOG.md
    Coverage = https://codecov.io/gh/althonos/mini3di/
    Builds = https://github.com/althonos/mini3di/actions
    PyPI = https://pypi.org/project/mini3di

[options]
zip_safe = true
packages = mini3di
python_requires = >=3.7
test_suite = tests
include_package_data = true
setup_requires = setuptools >=46.4
install_requires =
    numpy ~=1.0
    importlib-resources >=1.3 ; python_version < '3.9'

[options.package_data]
mini3di = py.typed, *.kerasify

[bdist_wheel]
universal = true

# --- Python tools configuration ---------------------------------------------

[coverage:report]
include = mini3di/*.py
show_missing = true
exclude_lines =
    pragma: no cover
    if typing.TYPE_CHECKING:
    @abc.abstractmethod
    @abc.abstractproperty
    raise NotImplementedError
    return NotImplemented

[mypy]
disallow_any_decorated = true
disallow_any_generics = true
disallow_any_unimported = false
disallow_subclassing_any = false
disallow_untyped_calls = true
disallow_untyped_defs = true
ignore_missing_imports = true
warn_unused_ignores = true
warn_return_any = true
